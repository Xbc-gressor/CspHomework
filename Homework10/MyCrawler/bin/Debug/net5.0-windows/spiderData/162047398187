<!DOCTYPE html>
<html lang="zh-cn">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="referrer" content="origin-when-crossorigin" />
    
    
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta http-equiv="Cache-Control" content="no-siteapp" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <title>随笔列表第2页 - time-flies - 博客园</title>
    <link id="favicon" rel="shortcut icon" href="//common.cnblogs.com/favicon.svg" type="image/svg+xml" />
    
    <link rel="stylesheet" href="/css/blog-common.min.css?v=zS6-e1bxywlu3kpHvpr1J6MySwya3ztFtEnS7RYQ0Fk" />
    
    <link type="text/css" rel="stylesheet" href="https://www.cnblogs.com/timefiles/custom.css?v=6rPjVzQKQRAVz3izjo1zeU0LXtw=" />
    <link id="mobile-style" media="only screen and (max-width: 767px)" type="text/css" rel="stylesheet" href="/skins/custom/bundle-custom-mobile.min.css?v=OayYBbtUbH4FYkn_bTL4VVf4DsEOiTHSWhbl11KyY6Y" />
    
    <link type="application/rss+xml" rel="alternate" href="https://www.cnblogs.com/timefiles/rss" />
    <link type="application/rsd+xml" rel="EditURI" href="https://www.cnblogs.com/timefiles/rsd.xml" />
    <link type="application/wlwmanifest+xml" rel="wlwmanifest" href="https://www.cnblogs.com/timefiles/wlwmanifest.xml" />
    <script>
        var currentBlogId = 564602;
        var currentBlogApp = 'timefiles';
        var cb_enable_mathjax = false;
        var isLogined = false;
        var isBlogOwner = false;
        var skinName = 'Custom';
        var visitorUserId = '';
    </script>
    <script src="https://common.cnblogs.com/scripts/jquery-2.2.0.min.js"></script>
    <script src="/js/blog-common.min.js?v=2Mic1VLeHXarpdzASbXqFMIMVLEBiWXNO5yiTHUcmhw"></script>
    
    
    
</head>
<body class="no-navbar">
    <a name="top"></a>
    <div id="top_nav" class="navbar forpc navbar-custom">
        <nav id="nav_main" class="navbar-main">
            <ul id="nav_left" class="navbar-list navbar-left">
                <li class="navbar-branding"><a href="https://www.cnblogs.com/" title="开发者的网上家园"><img src="/images/logo.svg?v=R9M0WmLAIPVydmdzE2keuvnjl-bPR7_35oHqtiBzGsM" alt="博客园Logo" /></a></li>
                <li><a href="/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-sitehome')">首页</a></li>
                <li><a href="https://news.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-news')">新闻</a></li>
                <li><a href="https://q.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-q')">博问</a></li>
                <li><a id="nav_brandzone" href="https://brands.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-brands')">专区</a></li>
                <li><a href="https://ing.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-ing')">闪存</a></li>
                <li><a href="https://edu.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-edu')">班级</a></li>
            </ul>
            <ul id="nav_right" class="navbar-list navbar-right">
                <li>
                    <form id="zzk_search" class="navbar-search" action="https://zzk.cnblogs.com/s" method="get">
                        <input name="w" id="zzk_search_input" placeholder="代码改变世界" type="text" tabindex="3" />
                        <button type="submit" id="zzk_search_button">
                            <img src="/images/aggsite/search.svg" alt="搜索" />
                        </button>
                    </form>
                </li>
                <li id="navbar_login_status" class="navbar-list">
                    <a class="navbar-user-info navbar-blog" href="https://i.cnblogs.com/EditPosts.aspx?opt=1" alt="写随笔" title="写随笔">
                        <img id="new_post_icon" class="navbar-icon" src="/images/aggsite/newpost.svg" alt="写随笔" />
                    </a>
                    <a id="navblog-myblog-icon" class="navbar-user-info navbar-blog" href="https://passport.cnblogs.com/GetBlogApplyStatus.aspx" alt="我的博客" title="我的博客">
                        <img id="myblog_icon" class="navbar-icon" src="/images/aggsite/myblog.svg" alt="我的博客" />
                    </a>
                    <a class="navbar-user-info navbar-message navbar-icon-wrapper" href="https://msg.cnblogs.com/" alt="短消息" title="短消息">
                        <img id="msg_icon" class="navbar-icon" src="/images/aggsite/message.svg?v=J0WS2P2iPgaIVgXxcAhliw4AFZIpaTWxtdoNAv9eiCA" alt="短消息" />
                        <span id="msg_count" style="display: none"></span>
                    </a>
                    <div id="user_info" class="navbar-user-info dropdown">
                        <a class="dropdown-button" href="https://home.cnblogs.com/">
                            <img id="user_icon" class="navbar-avatar" src="/images/aggsite/avatar-default.svg" alt="用户头像" />
                        </a>
                        <div class="dropdown-menu">
                            <a id="navblog-myblog-text" href="https://passport.cnblogs.com/GetBlogApplyStatus.aspx">我的博客</a>
                            <a href="https://home.cnblogs.com/">我的园子</a>
                            <a href="https://account.cnblogs.com/settings/account">账号设置</a>
                            <a href="javascript:void(0)" id="navbar_lite_mode_toggle" title="简洁模式会使用简洁款皮肤显示所有博客">
    简洁模式 <img id="navbar_lite_mode_on" src="/images/lite-mode-check.svg" class="hide" /><span id="navbar_lite_mode_spinner" class="hide">...</span>
</a>
                            <a href="javascript:void(0)" onclick="account.logout();">退出登录</a>
                        </div>
                    </div>
                    <a class="navbar-anonymous" href="https://account.cnblogs.com/signup/">注册</a>
                    <a class="navbar-anonymous" href="javascript:void(0);" onclick="account.login()">登录</a>
                </li>
            </ul>
        </nav>
    </div>

    <div id="page_begin_html">
        <script>loadPageBeginHtml();</script>
    </div>
    <!--done-->
<div id="home">
<div id="header">
	<div id="blogTitle">
        <a id="lnkBlogLogo" href="https://www.cnblogs.com/timefiles/"><img id="blogLogo" src="/skins/custom/images/logo.gif" alt="返回主页" /></a>		
		
<!--done-->
<h1><a id="Header1_HeaderTitle" class="headermaintitle HeaderMainTitle" href="https://www.cnblogs.com/timefiles/">time-flies的博客</a>
</h1>
<h2></h2>




		
	</div><!--end: blogTitle 博客的标题和副标题 -->
	<div id="navigator">
		
<ul id="navList">
<li>
</li>
<li>

</li>
<li>


</li>
<li>
</li>
<li>

<!--<partial name="./Shared/_XmlLink.cshtml" model="Model" /></li>--></li>
<li>
<a id="blog_nav_admin" class="menu" href="https://i.cnblogs.com/">
管理</a>
</li>
</ul>


		<div class="blogStats">
			<div id="blog_stats_place_holder"><script>loadBlogStats();</script></div>
		</div><!--end: blogStats -->
	</div><!--end: navigator 博客导航栏 -->
</div><!--end: header 头部 -->
<div id="main">
	<div id="mainContent">
	<div class="forFlow">
		



<div id="homepage_top_pager" class="topicListFooter">
    

<div class="pager">
    <a href="https://www.cnblogs.com/timefiles/default.html?page=1">上一页</a>
    
    
        <a href="https://www.cnblogs.com/timefiles/default.html?page=1">1</a>
    2
        <a href="https://www.cnblogs.com/timefiles/default.html?page=3">3</a>
        <a href="https://www.cnblogs.com/timefiles/default.html?page=4">4</a>
        <a href="https://www.cnblogs.com/timefiles/default.html?page=5">5</a>
        <a href="https://www.cnblogs.com/timefiles/default.html?page=6">6</a>
    ···
    <a href="https://www.cnblogs.com/timefiles/default.html?page=8">8</a>
    <a href="https://www.cnblogs.com/timefiles/default.html?page=3">下一页</a>
</div>
</div>

		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/timefiles/archive/2021/03/12.html">2021年3月12日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/timefiles/p/WpfTemplate.html">
    <span>
        WPF之模板
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：WPF系统不但支持传统的Winfrom编程的用户界面和用户体验设计，更支持使用专门的设计工具Blend进行专业设计，同时还推出了以模板为核心的新一代设计理念。
在WPF中，通过引入模板（Template）微软将数据和算法的“内容”与“形式”解耦了。WPF中的Template分为两大类：ControlTemplate是算法内容的表现形式；DataTemplate是数据内容的表现形式。        <a href="https://www.cnblogs.com/timefiles/p/WpfTemplate.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2021-03-12 00:22
time-flies
<span data-post-id="14491910" class="post-view-count">阅读(83)</span> 
<span data-post-id="14491910" class="post-comment-count">评论(0)</span> 
<span data-post-id="14491910" class="post-digg-count">推荐(2)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14491910" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/timefiles/archive/2021/03/07.html">2021年3月7日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/timefiles/p/WpfResources.html">
    <span>
        WPF之资源
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：WPF不但支持程序级的传统资源，同时还推出了独具特色的对象级资源，每个界面元素都可以携带自己的资源并可被自己的子级元素共享。
每个WPF界面元素都有一个名为Resource的属性，其类型为ResourceDictionary（继承至FrameworkElement类）。
ResourceDictionary能够以键值对的形式存储资源，当要使用到某个资源的时候，使用键值对的形式获取资源对象。
在保存资源时，ResourceDictionary视资源对象为Object类型，使用资源时先要对资源对象进行类型转换，XAML编译器能够根据Attribute自动识别资源类型（类型不对就会抛出异常），在C#中需要手动对资源对象进行类型转换。        <a href="https://www.cnblogs.com/timefiles/p/WpfResources.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2021-03-07 22:02
time-flies
<span data-post-id="14491755" class="post-view-count">阅读(97)</span> 
<span data-post-id="14491755" class="post-comment-count">评论(2)</span> 
<span data-post-id="14491755" class="post-digg-count">推荐(2)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14491755" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/timefiles/archive/2021/03/06.html">2021年3月6日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/timefiles/p/WpfCommand.html">
    <span>
        WPF之命令
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：WPF的命令系统由几个基本要素构成：命令（Command）、命令源（Command Source）、命令目标（Command Target）、命令关联（Command Binding）。
基本元素之间的关系体现在使用命令的过程中，命令的使用大概分为如下几步：创建命令类、声明命令实例、指定命令的源、指定命令目标、设置命令关联。        <a href="https://www.cnblogs.com/timefiles/p/WpfCommand.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2021-03-06 18:18
time-flies
<span data-post-id="14444564" class="post-view-count">阅读(116)</span> 
<span data-post-id="14444564" class="post-comment-count">评论(0)</span> 
<span data-post-id="14444564" class="post-digg-count">推荐(1)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14444564" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/timefiles/archive/2021/02/23.html">2021年2月23日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/timefiles/p/WpfEvents.html">
    <span>
        WPF之事件
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：事件的前身是消息（Message）。路由事件与直接事件的区别在于：直接事件激发时，发送者直接将消息通过事件订阅交送给事件响应者，事件响应者使用其事件处理器方法对事件的发生做出响应、驱动程序逻辑按客户需求运行；路由事件的事件拥有者和事件响应者之间则没有直接显式的订阅关系，事件的拥有者只负责激发事件，事件将由谁响应它并不知道，事件的响应者则安装有事件侦听器，针对某类事件进行侦听，当有此类事件传递至此时事件响应者就使用事件处理器来响应事件并决定事件是否可以继续传递。        <a href="https://www.cnblogs.com/timefiles/p/WpfEvents.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2021-02-23 23:56
time-flies
<span data-post-id="14433341" class="post-view-count">阅读(111)</span> 
<span data-post-id="14433341" class="post-comment-count">评论(0)</span> 
<span data-post-id="14433341" class="post-digg-count">推荐(0)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14433341" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/timefiles/archive/2021/02/22.html">2021年2月22日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/timefiles/p/WpfAttributes.html">
    <span>
        WPF之属性
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：.NET Framework中的属性又称为CLR属性（CLR，Common Language Runtime），既可以说CLR属性是private字段的安全访问包装（Get/Set方法），也可以说一个private字段在后台支持（back）一个CLR属性。
C#代码中的属性的编译结果是两个方法，再多实例方法也只有一个拷贝，CLR属性并不会增加内存的负担。属性仅仅是个语法糖衣（Syntax Sugar）。        <a href="https://www.cnblogs.com/timefiles/p/WpfAttributes.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2021-02-22 22:25
time-flies
<span data-post-id="14427912" class="post-view-count">阅读(128)</span> 
<span data-post-id="14427912" class="post-comment-count">评论(1)</span> 
<span data-post-id="14427912" class="post-digg-count">推荐(0)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14427912" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/timefiles/archive/2021/02/15.html">2021年2月15日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/timefiles/p/WpfBinding.html">
    <span>
        WPF之数据绑定
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：Windows GUI运行的机理是使用消息（Mesage）来驱使程序向前运行，消息的主要来源是用户的操作（如单击鼠标、按下按钮），消息又会被Windows翻译并送达目标程序然后被程序所处理。程序是被来自UI的事件（即封装过的消息）驱使问前的，简称“消息驱动”或“事件驱动”。因为消息和事件大都来自于UI，所以统称它们为“UI驱动程序”。使用“UI驱动程序”开发程序是“为了GUI而GUI”、单纯地为了实现程序的GUI化，已经背离了程序的本质一一数据加算法。
WPF作为一种专门的展示层技术，华丽的外观和动画只是它的表层现象。WPF引入了Data Binding概念以及与之配套的Dependency Property系统和DataTemplate，帮助程序员把思维的重心固定在了逻辑层、让展示层永远处于逻辑层的从属地位。        <a href="https://www.cnblogs.com/timefiles/p/WpfBinding.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2021-02-15 14:56
time-flies
<span data-post-id="14395704" class="post-view-count">阅读(149)</span> 
<span data-post-id="14395704" class="post-comment-count">评论(0)</span> 
<span data-post-id="14395704" class="post-digg-count">推荐(0)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14395704" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/timefiles/archive/2021/02/10.html">2021年2月10日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/timefiles/p/WpfControlLayout.html">
    <span>
        WPF之控件布局
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：程序的本质是“数据+算法”——用户输入原始数据，算法处理原始数据并得到结果数据。程序可以使用LED阵列、格式字符串、图形化用户界面（Graphic User Interface，GUI）将结果数据显示给用户，其中图形化用户界面最方便、直观。        <a href="https://www.cnblogs.com/timefiles/p/WpfControlLayout.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2021-02-10 14:03
time-flies
<span data-post-id="14359584" class="post-view-count">阅读(109)</span> 
<span data-post-id="14359584" class="post-comment-count">评论(0)</span> 
<span data-post-id="14359584" class="post-digg-count">推荐(0)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14359584" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/timefiles/archive/2021/01/31.html">2021年1月31日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/timefiles/p/WPF_X-namespace.html">
    <span>
        WPF之x命名空间
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：“x命名空间”的x是映射XML命名空间时给它取的名字（取XAML的首字母），里面的成员（如xClass、x:Name）是专门写给XAML编译器看、用来引导XAML编译器把XAML代码编译成CLR代码的。
x命名空间映射的是http://schemas.microsoft.com/winfx/2006/xaml，包含的类均与解析XAML语言相关，所以亦可称之为“XAML命名空间”。x命名空间里面的类能让程序员与XAML编译器沟通。        <a href="https://www.cnblogs.com/timefiles/p/WPF_X-namespace.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2021-01-31 23:58
time-flies
<span data-post-id="14353436" class="post-view-count">阅读(112)</span> 
<span data-post-id="14353436" class="post-comment-count">评论(1)</span> 
<span data-post-id="14353436" class="post-digg-count">推荐(0)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14353436" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/timefiles/archive/2021/01/26.html">2021年1月26日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/timefiles/p/WPF_XamlSyntax.html">
    <span>
        WPF之XAML语法
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：XAML使用标签来定义Ul元素（UIElement），每个标签对应NET Framework类库中的一个控件类。通过设置标签的Atribute，不但可以对标签所对应控件对象的Property进行赋值，还可以做一些额外的事件（如声明命名空间、指定类名等）。        <a href="https://www.cnblogs.com/timefiles/p/WPF_XamlSyntax.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2021-01-26 22:21
time-flies
<span data-post-id="14322754" class="post-view-count">阅读(167)</span> 
<span data-post-id="14322754" class="post-comment-count">评论(3)</span> 
<span data-post-id="14322754" class="post-digg-count">推荐(1)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14322754" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/timefiles/archive/2021/01/23.html">2021年1月23日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/timefiles/p/DreamweaverBasicsCourseIntroduce.html">
    <span>
        Dreamweaver基础教程：系列介绍
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：Adobe Dreamweaver，简称“DW”，中文名称 "梦想编织者"，最初为美国MACROMEDIA公司开发，2005年被Adobe公司收购。
DW是集网页制作和管理网站于一身的**所见即所得网页代码编辑器**。利用对 HTML、CSS、JavaScript等内容的支持，设计师和程序员可以在几乎任何地方快速制作和进行网站建设。 
Adobe Dreamweaver使用所见即所得的接口，亦有HTML（标准通用标记语言下的一个应用）编辑的功能，借助经过简化的智能编码引擎，轻松地创建、编码和管理动态网站。        <a href="https://www.cnblogs.com/timefiles/p/DreamweaverBasicsCourseIntroduce.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2021-01-23 20:25
time-flies
<span data-post-id="14318731" class="post-view-count">阅读(103)</span> 
<span data-post-id="14318731" class="post-comment-count">评论(0)</span> 
<span data-post-id="14318731" class="post-digg-count">推荐(0)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14318731" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>



<div class="topicListFooter">
    <div id="nav_next_page">
        

    </div>    
</div>


<div id="homepage_bottom_pager" class="topicListFooter">
    

<div class="pager">
    <a href="https://www.cnblogs.com/timefiles/default.html?page=1">上一页</a>
    
    
        <a href="https://www.cnblogs.com/timefiles/default.html?page=1">1</a>
    2
        <a href="https://www.cnblogs.com/timefiles/default.html?page=3">3</a>
        <a href="https://www.cnblogs.com/timefiles/default.html?page=4">4</a>
        <a href="https://www.cnblogs.com/timefiles/default.html?page=5">5</a>
        <a href="https://www.cnblogs.com/timefiles/default.html?page=6">6</a>
    ···
    <a href="https://www.cnblogs.com/timefiles/default.html?page=8">8</a>
    <a href="https://www.cnblogs.com/timefiles/default.html?page=3">下一页</a>
</div>
</div>



<script>
    updatePostStats(
        $(".post-view-count").map(function () { return this.dataset.postId }).get(),
        function(id, count) { $(".post-view-count[data-post-id=" + id + "]").text("阅读(" + count + ")") },
        function(id, count) { $(".post-comment-count[data-post-id=" + id + "]").text("评论(" + count + ")") },
        function(id, count) { $(".post-digg-count[data-post-id=" + id + "]").text("推荐(" + count + ")") });
</script>
	</div><!--end: forFlow -->
	</div><!--end: mainContent 主体内容容器-->
	<div id="sideBar">
		<div id="sideBarMain">
			<div id="sidebar_news" class="newsItem">
            <script>loadBlogNews();</script>
</div>
<div id="sidebar_c3"></div>
			<div id="blog-calendar" style="display:none"></div><script>loadBlogDefaultCalendar();</script>			
			<div id="leftcontentcontainer">
				<div id="blog-sidecolumn"></div>
                    <script>loadBlogSideColumn();</script>
			</div>			
		</div><!--end: sideBarMain -->
	</div><!--end: sideBar 侧边栏容器 -->
	<div class="clear"></div>
	</div><!--end: main -->
	<div class="clear"></div>
	<div id="footer">
		<!--done-->
Copyright &copy; 2021 time-flies
<br /><span id="poweredby">Powered by .NET 5.0 on Kubernetes</span>



	</div><!--end: footer -->
</div><!--end: home 自定义的最大容器 -->


    <div id="page_end_html">
        <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
<script src="https://blog-static.cnblogs.com/files/timefiles/spig_wm.js"></script>
<!--博客精灵 start*-->
<div id="spig" class="spig">
    <div id="message">……</div>
    <div id="mumu" class="mumu"></div>
</div>

<script type="text/javascript">
var isindex=true;
var title="";
var visitor="臭DD";
</script>
<!--精灵end*-->
    </div>

    <input type="hidden" id="antiforgery_token" value="CfDJ8L-rpLgFVEJMgssCVvNUAjs7Z4iEoD6bQWNo0lpXJS0GqnO7r5O9lAyzqPR8rGECIBCjkQvtZtF6tB5RasDKlYR5_gJIwqpNI7rXBPDgJmLoZSieLkOeQ9C46-bHSiCjFQXv964YyCAQMfkOYp_8RTk" />
</body>
</html>
