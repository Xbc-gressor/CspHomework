<!DOCTYPE html>
<html lang="zh-cn">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="referrer" content="origin-when-crossorigin" />
    
    
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta http-equiv="Cache-Control" content="no-siteapp" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <title>随笔列表第2页 - Punished - 博客园</title>
    <link id="favicon" rel="shortcut icon" href="//common.cnblogs.com/favicon.svg" type="image/svg+xml" />
    
    <link rel="stylesheet" href="/css/blog-common.min.css?v=zS6-e1bxywlu3kpHvpr1J6MySwya3ztFtEnS7RYQ0Fk" />
    
    <link type="text/css" rel="stylesheet" href="https://www.cnblogs.com/punished/custom.css?v=cansC9ZJJ6jGQM8W4CZ4cif/byI=" />
    <link id="mobile-style" media="only screen and (max-width: 767px)" type="text/css" rel="stylesheet" href="/skins/SimpleMemory/bundle-SimpleMemory-mobile.min.css" />
    
    <link type="application/rss+xml" rel="alternate" href="https://www.cnblogs.com/punished/rss" />
    <link type="application/rsd+xml" rel="EditURI" href="https://www.cnblogs.com/punished/rsd.xml" />
    <link type="application/wlwmanifest+xml" rel="wlwmanifest" href="https://www.cnblogs.com/punished/wlwmanifest.xml" />
    <script>
        var currentBlogId = 671608;
        var currentBlogApp = 'punished';
        var cb_enable_mathjax = false;
        var isLogined = false;
        var isBlogOwner = false;
        var skinName = 'SimpleMemory';
        var visitorUserId = '';
    </script>
    <script src="https://common.cnblogs.com/scripts/jquery-2.2.0.min.js"></script>
    <script src="/js/blog-common.min.js?v=2Mic1VLeHXarpdzASbXqFMIMVLEBiWXNO5yiTHUcmhw"></script>
    
    
    
</head>
<body class="no-navbar">
    <a name="top"></a>
    <div id="top_nav" class="navbar forpc navbar-custom">
        <nav id="nav_main" class="navbar-main">
            <ul id="nav_left" class="navbar-list navbar-left">
                <li class="navbar-branding"><a href="https://www.cnblogs.com/" title="开发者的网上家园"><img src="/images/logo.svg?v=R9M0WmLAIPVydmdzE2keuvnjl-bPR7_35oHqtiBzGsM" alt="博客园Logo" /></a></li>
                <li><a href="/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-sitehome')">首页</a></li>
                <li><a href="https://news.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-news')">新闻</a></li>
                <li><a href="https://q.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-q')">博问</a></li>
                <li><a id="nav_brandzone" href="https://brands.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-brands')">专区</a></li>
                <li><a href="https://ing.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-ing')">闪存</a></li>
                <li><a href="https://edu.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-edu')">班级</a></li>
            </ul>
            <ul id="nav_right" class="navbar-list navbar-right">
                <li>
                    <form id="zzk_search" class="navbar-search" action="https://zzk.cnblogs.com/s" method="get">
                        <input name="w" id="zzk_search_input" placeholder="代码改变世界" type="text" tabindex="3" />
                        <button type="submit" id="zzk_search_button">
                            <img src="/images/aggsite/search.svg" alt="搜索" />
                        </button>
                    </form>
                </li>
                <li id="navbar_login_status" class="navbar-list">
                    <a class="navbar-user-info navbar-blog" href="https://i.cnblogs.com/EditPosts.aspx?opt=1" alt="写随笔" title="写随笔">
                        <img id="new_post_icon" class="navbar-icon" src="/images/aggsite/newpost.svg" alt="写随笔" />
                    </a>
                    <a id="navblog-myblog-icon" class="navbar-user-info navbar-blog" href="https://passport.cnblogs.com/GetBlogApplyStatus.aspx" alt="我的博客" title="我的博客">
                        <img id="myblog_icon" class="navbar-icon" src="/images/aggsite/myblog.svg" alt="我的博客" />
                    </a>
                    <a class="navbar-user-info navbar-message navbar-icon-wrapper" href="https://msg.cnblogs.com/" alt="短消息" title="短消息">
                        <img id="msg_icon" class="navbar-icon" src="/images/aggsite/message.svg?v=J0WS2P2iPgaIVgXxcAhliw4AFZIpaTWxtdoNAv9eiCA" alt="短消息" />
                        <span id="msg_count" style="display: none"></span>
                    </a>
                    <div id="user_info" class="navbar-user-info dropdown">
                        <a class="dropdown-button" href="https://home.cnblogs.com/">
                            <img id="user_icon" class="navbar-avatar" src="/images/aggsite/avatar-default.svg" alt="用户头像" />
                        </a>
                        <div class="dropdown-menu">
                            <a id="navblog-myblog-text" href="https://passport.cnblogs.com/GetBlogApplyStatus.aspx">我的博客</a>
                            <a href="https://home.cnblogs.com/">我的园子</a>
                            <a href="https://account.cnblogs.com/settings/account">账号设置</a>
                            <a href="javascript:void(0)" id="navbar_lite_mode_toggle" title="简洁模式会使用简洁款皮肤显示所有博客">
    简洁模式 <img id="navbar_lite_mode_on" src="/images/lite-mode-check.svg" class="hide" /><span id="navbar_lite_mode_spinner" class="hide">...</span>
</a>
                            <a href="javascript:void(0)" onclick="account.logout();">退出登录</a>
                        </div>
                    </div>
                    <a class="navbar-anonymous" href="https://account.cnblogs.com/signup/">注册</a>
                    <a class="navbar-anonymous" href="javascript:void(0);" onclick="account.login()">登录</a>
                </li>
            </ul>
        </nav>
    </div>

    
    <!--done-->
<div id="home">
<div id="header">
	<div id="blogTitle">
        <a id="lnkBlogLogo" href="https://www.cnblogs.com/punished/"><img id="blogLogo" src="/skins/custom/images/logo.gif" alt="返回主页" /></a>		
		
<!--done-->
<h1><a id="Header1_HeaderTitle" class="headermaintitle HeaderMainTitle" href="https://www.cnblogs.com/punished/">Punished</a>
</h1>
<h2></h2>




		
	</div><!--end: blogTitle 博客的标题和副标题 -->
	<div id="navigator">
		
<ul id="navList">
<li><a id="blog_nav_sitehome" class="menu" href="https://www.cnblogs.com/">
博客园</a>
</li>
<li>
<a id="blog_nav_myhome" class="menu" href="https://www.cnblogs.com/punished/">
首页</a>
</li>
<li>

<a id="blog_nav_newpost" class="menu" href="https://i.cnblogs.com/EditPosts.aspx?opt=1">
新随笔</a>
</li>
<li>
<a id="blog_nav_contact" class="menu" href="https://msg.cnblogs.com/send/Punished">
联系</a></li>
<li>
<a id="blog_nav_rss" class="menu" href="javascript:void(0)" data-rss="https://www.cnblogs.com/punished/rss/">
订阅</a>
<!--<partial name="./Shared/_XmlLink.cshtml" model="Model" /></li>--></li>
<li>
<a id="blog_nav_admin" class="menu" href="https://i.cnblogs.com/">
管理</a>
</li>
</ul>


		<div class="blogStats">
			<div id="blog_stats_place_holder"><script>loadBlogStats();</script></div>
		</div><!--end: blogStats -->
	</div><!--end: navigator 博客导航栏 -->
</div><!--end: header 头部 -->
<div id="main">
	<div id="mainContent">
	<div class="forFlow">
		



<div id="homepage_top_pager" class="topicListFooter">
    

<div class="pager">
    <a href="https://www.cnblogs.com/punished/default.html?page=1">上一页</a>
    
    
        <a href="https://www.cnblogs.com/punished/default.html?page=1">1</a>
    2
        <a href="https://www.cnblogs.com/punished/default.html?page=3">3</a>
        <a href="https://www.cnblogs.com/punished/default.html?page=4">4</a>
    
    
    <a href="https://www.cnblogs.com/punished/default.html?page=3">下一页</a>
</div>
</div>

		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/punished/archive/2021/04/15.html">2021年4月15日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/punished/p/14664688.html">
    <span>
        Java面向对象(中)
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：面向对象的特征之二:继承性 使用子类Extends父类进行继承 一、继承性的好处: 减少了代码的冗余,提高了代码的复用性便于功能的扩展 为之后多态性的使用，提供了前提 二、继承性的格式:class A extends B{} A:子类、派生类、subclass B:父类、超类、基类、supercla        <a href="https://www.cnblogs.com/punished/p/14664688.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2021-04-15 22:06
Punished
<span data-post-id="14664688" class="post-view-count">阅读(12)</span> 
<span data-post-id="14664688" class="post-comment-count">评论(0)</span> 
<span data-post-id="14664688" class="post-digg-count">推荐(0)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14664688" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
            <div class="postSeparator"></div>
        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/punished/p/14663701.html">
    <span>
        反汇编引擎编写
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：说在前面 反汇编引擎是众多逆向分析工具都必有,也是比较核心的功能,编写需要的基础知识已经在硬编码前面几节内容说到,本次编写只针对了Mod R/M 和 SIB字段的编写，写的并不全，经过这次编写主要还是练习c++，写到后面发现还是最开始设计时,功能封装并没有设计好，其实写这个引擎设计非常重要,但这次编        <a href="https://www.cnblogs.com/punished/p/14663701.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2021-04-15 17:52
Punished
<span data-post-id="14663701" class="post-view-count">阅读(16)</span> 
<span data-post-id="14663701" class="post-comment-count">评论(0)</span> 
<span data-post-id="14663701" class="post-digg-count">推荐(0)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14663701" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/punished/archive/2021/04/14.html">2021年4月14日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/punished/p/14659663.html">
    <span>
        Eclipse中的快捷键
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：1.补全代码的声明:alt +/2.快速修复:ctrl +13.批量导包:ctrl + shift +o4.使用单行注释:ctrl +/5.使用多行注释:ctri +shift +/6.取消多行注释:ctrl + shift +\7.复制指定行的代码:ctrl + alt + down或ctrl +        <a href="https://www.cnblogs.com/punished/p/14659663.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2021-04-14 20:06
Punished
<span data-post-id="14659663" class="post-view-count">阅读(8)</span> 
<span data-post-id="14659663" class="post-comment-count">评论(0)</span> 
<span data-post-id="14659663" class="post-digg-count">推荐(0)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14659663" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/punished/archive/2021/04/12.html">2021年4月12日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/punished/p/14649523.html">
    <span>
        Java面向对象(上)
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：类和对象的的使用 package org.atguigu.java; /* * 类和对象的使用（面向对象思想落地的实现） * 1.创建类，设计类的成员 * 2.创建类的对象 * 3.通过“对象.属性”或“对象.方法”调用对象的结构 */ //测试类 public class PersonTest {        <a href="https://www.cnblogs.com/punished/p/14649523.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2021-04-12 19:01
Punished
<span data-post-id="14649523" class="post-view-count">阅读(7)</span> 
<span data-post-id="14649523" class="post-comment-count">评论(0)</span> 
<span data-post-id="14649523" class="post-digg-count">推荐(0)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14649523" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/punished/archive/2021/04/10.html">2021年4月10日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/punished/p/14641525.html">
    <span>
        经典变长指令_Reg/Opcode
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：在之前的课程中，3-5位用来标识寄存器，Mod字段 与 R/M字段共同用来标识寄存器与内存 但3-5字段，并不仅仅用来标识寄存器，有些时候，用来标识Opcode 参见Table A-2中 ： 80 81 82 83 这几个编码，并没有明确给出具体的操作码是什么。 有这个Grap字段的都去看Table        <a href="https://www.cnblogs.com/punished/p/14641525.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2021-04-10 17:16
Punished
<span data-post-id="14641525" class="post-view-count">阅读(6)</span> 
<span data-post-id="14641525" class="post-comment-count">评论(0)</span> 
<span data-post-id="14641525" class="post-digg-count">推荐(0)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14641525" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/punished/archive/2021/04/09.html">2021年4月9日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/punished/p/14636877.html">
    <span>
        经典变长指令SIB
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：前言 ModR/M字段是用来进行内存寻址的，可当地址形如DS:[EAX + ECX*2 + 12345678]时，仅仅靠ModR/M字段，是描述不出来的。 这时就在ModR/M后面增加一个SIB字节，与ModR/M字段共同描述。 上一节说到opcode决定了是否有ModR/M字段,而opcode和M        <a href="https://www.cnblogs.com/punished/p/14636877.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2021-04-09 14:10
Punished
<span data-post-id="14636877" class="post-view-count">阅读(106)</span> 
<span data-post-id="14636877" class="post-comment-count">评论(0)</span> 
<span data-post-id="14636877" class="post-digg-count">推荐(0)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14636877" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/punished/archive/2021/04/08.html">2021年4月8日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/punished/p/14634741.html">
    <span>
        windows环境下抓密码总结
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：在线抓密码 1.mimikatz privilege::debug token::whoami token::elevate lsadump::sam mimikatz.exe &quot;privilege::debug&quot; &quot;sekurlsa::logonpasswords&quot; 2.ps脚本 使用Get-Pa        <a href="https://www.cnblogs.com/punished/p/14634741.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2021-04-08 20:42
Punished
<span data-post-id="14634741" class="post-view-count">阅读(15)</span> 
<span data-post-id="14634741" class="post-comment-count">评论(0)</span> 
<span data-post-id="14634741" class="post-digg-count">推荐(0)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14634741" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/punished/archive/2021/04/07.html">2021年4月7日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/punished/p/14629660.html">
    <span>
        经典变长指令ModR/M
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：变长指令 不是所有的指令都是,看到opcode就知道有多长(定长指令)，当指令中出现内存操作对象的时候，就需要在操作码后面附加一个字节来进行补充说明，这个字节被称为ModR/M。 该字节的8个位被分成了三部分： 其中，Reg/Opcode(第3、4、5位，共3个字节)描述指令中的G部分，即寄存器 M        <a href="https://www.cnblogs.com/punished/p/14629660.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2021-04-07 21:24
Punished
<span data-post-id="14629660" class="post-view-count">阅读(116)</span> 
<span data-post-id="14629660" class="post-comment-count">评论(0)</span> 
<span data-post-id="14629660" class="post-digg-count">推荐(0)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14629660" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/punished/archive/2021/04/06.html">2021年4月6日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/punished/p/14623444.html">
    <span>
        经典定长指令下(修改EIP)
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：1、0x70 - 0x7F opcode一个字节 条件跳转，后跟一个字节立即数的偏移(有符号)，共两个字节。 如果条件成立，跳转到 当前指令地址 + 当前指令长度 + Ib（immediate byte(一个长度为一字节的立即数) 最大值：向前跳7f，向后跳80 2、0x0F 0x80 - 0x0F        <a href="https://www.cnblogs.com/punished/p/14623444.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2021-04-06 19:48
Punished
<span data-post-id="14623444" class="post-view-count">阅读(15)</span> 
<span data-post-id="14623444" class="post-comment-count">评论(0)</span> 
<span data-post-id="14623444" class="post-digg-count">推荐(0)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14623444" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
            <div class="postSeparator"></div>
        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/punished/p/14623332.html">
    <span>
        Kerberos协议
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：Windows密码储存机制 NTHash 在 Windows中， 存储的密码Hash就叫做&#160;NTHash，也叫做&#160;NTLM，其中NTLM 全称是 “NT LAN Manager”，NTHash&#160;是通过对密码明文进行十六进制和unicode转换，然后md4算法运算后得到（算法表示为MD4(UTF-16        <a href="https://www.cnblogs.com/punished/p/14623332.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2021-04-06 19:17
Punished
<span data-post-id="14623332" class="post-view-count">阅读(4)</span> 
<span data-post-id="14623332" class="post-comment-count">评论(0)</span> 
<span data-post-id="14623332" class="post-digg-count">推荐(0)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14623332" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>



<div class="topicListFooter">
    <div id="nav_next_page">
        

    </div>    
</div>


<div id="homepage_bottom_pager" class="topicListFooter">
    

<div class="pager">
    <a href="https://www.cnblogs.com/punished/default.html?page=1">上一页</a>
    
    
        <a href="https://www.cnblogs.com/punished/default.html?page=1">1</a>
    2
        <a href="https://www.cnblogs.com/punished/default.html?page=3">3</a>
        <a href="https://www.cnblogs.com/punished/default.html?page=4">4</a>
    
    
    <a href="https://www.cnblogs.com/punished/default.html?page=3">下一页</a>
</div>
</div>



<script>
    updatePostStats(
        $(".post-view-count").map(function () { return this.dataset.postId }).get(),
        function(id, count) { $(".post-view-count[data-post-id=" + id + "]").text("阅读(" + count + ")") },
        function(id, count) { $(".post-comment-count[data-post-id=" + id + "]").text("评论(" + count + ")") },
        function(id, count) { $(".post-digg-count[data-post-id=" + id + "]").text("推荐(" + count + ")") });
</script>
	</div><!--end: forFlow -->
	</div><!--end: mainContent 主体内容容器-->
	<div id="sideBar">
		<div id="sideBarMain">
			<div id="sidebar_news" class="newsItem">
            <script>loadBlogNews();</script>
</div>
<div id="sidebar_c3"></div>
			<div id="blog-calendar" style="display:none"></div><script>loadBlogDefaultCalendar();</script>			
			<div id="leftcontentcontainer">
				<div id="blog-sidecolumn"></div>
                    <script>loadBlogSideColumn();</script>
			</div>			
		</div><!--end: sideBarMain -->
	</div><!--end: sideBar 侧边栏容器 -->
	<div class="clear"></div>
	</div><!--end: main -->
	<div class="clear"></div>
	<div id="footer">
		<!--done-->
Copyright &copy; 2021 Punished
<br /><span id="poweredby">Powered by .NET 5.0 on Kubernetes</span>



	</div><!--end: footer -->
</div><!--end: home 自定义的最大容器 -->


    

    <input type="hidden" id="antiforgery_token" value="CfDJ8L-rpLgFVEJMgssCVvNUAjtPfmtrRf-Gy_Gdhjb4wG5HJ58NjHrEANyitEIv8wKFR6NrBUdaztJR3Vjz9VFxTJ3jAkFAXu68p2Gm_7kHmWTvmfCl-zbk-Ov5tNGNXnJYRkqdjsfc1jmY-hdSU9rZomg" />
</body>
</html>
