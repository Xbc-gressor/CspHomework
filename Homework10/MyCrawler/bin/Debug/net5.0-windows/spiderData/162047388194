<!DOCTYPE html>
<html lang="zh-cn">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="referrer" content="origin-when-crossorigin" />
    
    
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta http-equiv="Cache-Control" content="no-siteapp" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <title>牧梦者 - 博客园</title>
    <link id="favicon" rel="shortcut icon" href="//common.cnblogs.com/favicon.svg" type="image/svg+xml" />
    
    <link rel="stylesheet" href="/css/blog-common.min.css?v=zS6-e1bxywlu3kpHvpr1J6MySwya3ztFtEnS7RYQ0Fk" />
    <link id="MainCss" rel="stylesheet" href="/skins/darkgreentrip/bundle-darkgreentrip.min.css?v=eoZATbPKwJCL5eWVDTQIYC6CIxJPcFz191dkzN2tSyQ" />
    <link type="text/css" rel="stylesheet" href="https://www.cnblogs.com/swordfall/custom.css?v=OHwWKu9RQ1jLnJVxXXSp&#x2B;LZz42g=" />
    <link id="mobile-style" media="only screen and (max-width: 767px)" type="text/css" rel="stylesheet" href="/skins/darkgreentrip/bundle-darkgreentrip-mobile.min.css?v=lU86o8mZVn3FOSdFt7nHKYTD8gzeKaiQIIZ6lSjEFyo" />
    
    <link type="application/rss+xml" rel="alternate" href="https://www.cnblogs.com/swordfall/rss" />
    <link type="application/rsd+xml" rel="EditURI" href="https://www.cnblogs.com/swordfall/rsd.xml" />
    <link type="application/wlwmanifest+xml" rel="wlwmanifest" href="https://www.cnblogs.com/swordfall/wlwmanifest.xml" />
    <script>
        var currentBlogId = 373050;
        var currentBlogApp = 'swordfall';
        var cb_enable_mathjax = true;
        var isLogined = false;
        var isBlogOwner = false;
        var skinName = 'darkgreentrip';
        var visitorUserId = '';
    </script>
    <script src="https://common.cnblogs.com/scripts/jquery-2.2.0.min.js"></script>
    <script src="/js/blog-common.min.js?v=2Mic1VLeHXarpdzASbXqFMIMVLEBiWXNO5yiTHUcmhw"></script>
    <script type="text/x-mathjax-config">
        MathJax.Hub.Config({
        tex2jax: { inlineMath: [['$','$'], ['\\(','\\)']], processClass: 'math', processEscapes: true },
        TeX: {
        equationNumbers: { autoNumber: ['AMS'], useLabelIds: true },
        extensions: ['extpfeil.js', 'mediawiki-texvc.js'],
        Macros: {bm: "\\boldsymbol"}
        },
        'HTML-CSS': { linebreaks: { automatic: true } },
        SVG: { linebreaks: { automatic: true } }
        });
    </script>
    <script src="https://mathjax.cnblogs.com/2_7_5/MathJax.js?config=TeX-AMS-MML_HTMLorMML&amp;v=20200504"></script>
    
</head>
<body class="no-navbar">
    <a name="top"></a>
    <div id="top_nav" class="navbar forpc navbar-custom">
        <nav id="nav_main" class="navbar-main">
            <ul id="nav_left" class="navbar-list navbar-left">
                <li class="navbar-branding"><a href="https://www.cnblogs.com/" title="开发者的网上家园"><img src="/images/logo.svg?v=R9M0WmLAIPVydmdzE2keuvnjl-bPR7_35oHqtiBzGsM" alt="博客园Logo" /></a></li>
                <li><a href="/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-sitehome')">首页</a></li>
                <li><a href="https://news.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-news')">新闻</a></li>
                <li><a href="https://q.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-q')">博问</a></li>
                <li><a id="nav_brandzone" href="https://brands.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-brands')">专区</a></li>
                <li><a href="https://ing.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-ing')">闪存</a></li>
                <li><a href="https://edu.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-edu')">班级</a></li>
            </ul>
            <ul id="nav_right" class="navbar-list navbar-right">
                <li>
                    <form id="zzk_search" class="navbar-search" action="https://zzk.cnblogs.com/s" method="get">
                        <input name="w" id="zzk_search_input" placeholder="代码改变世界" type="text" tabindex="3" />
                        <button type="submit" id="zzk_search_button">
                            <img src="/images/aggsite/search.svg" alt="搜索" />
                        </button>
                    </form>
                </li>
                <li id="navbar_login_status" class="navbar-list">
                    <a class="navbar-user-info navbar-blog" href="https://i.cnblogs.com/EditPosts.aspx?opt=1" alt="写随笔" title="写随笔">
                        <img id="new_post_icon" class="navbar-icon" src="/images/aggsite/newpost.svg" alt="写随笔" />
                    </a>
                    <a id="navblog-myblog-icon" class="navbar-user-info navbar-blog" href="https://passport.cnblogs.com/GetBlogApplyStatus.aspx" alt="我的博客" title="我的博客">
                        <img id="myblog_icon" class="navbar-icon" src="/images/aggsite/myblog.svg" alt="我的博客" />
                    </a>
                    <a class="navbar-user-info navbar-message navbar-icon-wrapper" href="https://msg.cnblogs.com/" alt="短消息" title="短消息">
                        <img id="msg_icon" class="navbar-icon" src="/images/aggsite/message.svg?v=J0WS2P2iPgaIVgXxcAhliw4AFZIpaTWxtdoNAv9eiCA" alt="短消息" />
                        <span id="msg_count" style="display: none"></span>
                    </a>
                    <div id="user_info" class="navbar-user-info dropdown">
                        <a class="dropdown-button" href="https://home.cnblogs.com/">
                            <img id="user_icon" class="navbar-avatar" src="/images/aggsite/avatar-default.svg" alt="用户头像" />
                        </a>
                        <div class="dropdown-menu">
                            <a id="navblog-myblog-text" href="https://passport.cnblogs.com/GetBlogApplyStatus.aspx">我的博客</a>
                            <a href="https://home.cnblogs.com/">我的园子</a>
                            <a href="https://account.cnblogs.com/settings/account">账号设置</a>
                            <a href="javascript:void(0)" id="navbar_lite_mode_toggle" title="简洁模式会使用简洁款皮肤显示所有博客">
    简洁模式 <img id="navbar_lite_mode_on" src="/images/lite-mode-check.svg" class="hide" /><span id="navbar_lite_mode_spinner" class="hide">...</span>
</a>
                            <a href="javascript:void(0)" onclick="account.logout();">退出登录</a>
                        </div>
                    </div>
                    <a class="navbar-anonymous" href="https://account.cnblogs.com/signup/">注册</a>
                    <a class="navbar-anonymous" href="javascript:void(0);" onclick="account.login()">登录</a>
                </li>
            </ul>
        </nav>
    </div>

    <div id="page_begin_html">
        <link href="//cdn.bootcss.com/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet"/>
<a class="git-link" href="https://github.com/SwordfallYeung"></a>
    </div>
    <!--done-->
<div id="home">
<div id="header">
	<div id="blogTitle">
        <a id="lnkBlogLogo" href="https://www.cnblogs.com/swordfall/"><img id="blogLogo" src="/skins/custom/images/logo.gif" alt="返回主页" /></a>		
		
<!--done-->
<h1><a id="Header1_HeaderTitle" class="headermaintitle HeaderMainTitle" href="https://www.cnblogs.com/swordfall/">牧梦者</a>
</h1>
<h2></h2>




		
	</div><!--end: blogTitle 博客的标题和副标题 -->
	<div id="navigator">
		
<ul id="navList">
<li><a id="blog_nav_sitehome" class="menu" href="https://www.cnblogs.com/">
博客园</a>
</li>
<li>
<a id="blog_nav_myhome" class="menu" href="https://www.cnblogs.com/swordfall/">
首页</a>
</li>
<li>

<a id="blog_nav_newpost" class="menu" href="https://i.cnblogs.com/EditPosts.aspx?opt=1">
新随笔</a>
</li>
<li>
<a id="blog_nav_contact" class="menu" href="https://msg.cnblogs.com/send/%E7%89%A7%E6%A2%A6%E8%80%85">
联系</a></li>
<li>
<a id="blog_nav_rss" class="menu" href="javascript:void(0)" data-rss="https://www.cnblogs.com/swordfall/rss/">
订阅</a>
<!--<partial name="./Shared/_XmlLink.cshtml" model="Model" /></li>--></li>
<li>
<a id="blog_nav_admin" class="menu" href="https://i.cnblogs.com/">
管理</a>
</li>
</ul>


		<div class="blogStats">
			<div id="blog_stats_place_holder"><script>loadBlogStats();</script></div>
		</div><!--end: blogStats -->
	</div><!--end: navigator 博客导航栏 -->
</div><!--end: header 头部 -->
<div id="main">
	<div id="mainContent">
	<div class="forFlow">
		





		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/swordfall/archive/2019/04/29.html">2019年4月29日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/swordfall/p/10757499.html">
    <span>
            <span>[置顶]</span>
        Java调用第三方http接口的方式
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：1. 概述 在实际开发过程中，我们经常需要调用对方提供的接口或测试自己写的接口是否合适。很多项目都会封装规定好本身项目的接口规范，所以大多数需要去调用对方提供的接口或第三方接口（短信、天气等）。 在Java项目中调用第三方接口的方式有： ①通过JDK网络类Java.net.HttpURLConnec        <a href="https://www.cnblogs.com/swordfall/p/10757499.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2019-04-29 11:44
牧梦者
<span data-post-id="10757499" class="post-view-count">阅读(51596)</span> 
<span data-post-id="10757499" class="post-comment-count">评论(5)</span> 
<span data-post-id="10757499" class="post-digg-count">推荐(6)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=10757499" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/swordfall/archive/2018/08/24.html">2018年8月24日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/swordfall/p/9517988.html">
    <span>
            <span>[置顶]</span>
        机器学习算法原理解析 - 分类
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：常见分类模型与算法 距离判别法，即最近邻算法KNN； 贝叶斯分类器； 线性判别法，即逻辑回归算法； 决策树； 支持向量机； 神经网络； 1.&#160;KNN分类算法原理及应用 1.1&#160;KNN概述 K最近邻（k-Nearest Neighbor，KNN）分类算法是最简单的机器学习算法。 KNN算法的指导思想是        <a href="https://www.cnblogs.com/swordfall/p/9517988.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2018-08-24 17:42
牧梦者
<span data-post-id="9517988" class="post-view-count">阅读(17943)</span> 
<span data-post-id="9517988" class="post-comment-count">评论(0)</span> 
<span data-post-id="9517988" class="post-digg-count">推荐(5)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=9517988" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/swordfall/archive/2018/08/15.html">2018年8月15日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/swordfall/p/9456222.html">
    <span>
            <span>[置顶]</span>
        Spark MLlib 机器学习
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：本章导读 机器学习(machine learning, ML)是一门涉及概率论、统计学、逼近论、凸分析、算法复杂度理论等多领域的交叉学科。ML专注于研究计算机模拟或实现人类的学习行为，以获取新知识、新技能，并重组已学习的知识结构使之不断改善自身。 MLlib是Spark提供的可扩展的机器学习库。ML        <a href="https://www.cnblogs.com/swordfall/p/9456222.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2018-08-15 17:39
牧梦者
<span data-post-id="9456222" class="post-view-count">阅读(25326)</span> 
<span data-post-id="9456222" class="post-comment-count">评论(1)</span> 
<span data-post-id="9456222" class="post-digg-count">推荐(3)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=9456222" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/swordfall/archive/2018/05/12.html">2018年5月12日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/swordfall/p/9006088.html">
    <span>
            <span>[置顶]</span>
        Spark SQL基本概念与基本用法
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：1. Spark SQL概述 1.1 什么是Spark SQL Spark SQL是Spark用来处理结构化数据的一个模块，它提供了两个编程抽象分别叫做DataFrame和DataSet，它们用于作为分布式SQL查询引擎。从下图可以查看RDD、DataFrames与DataSet的关系。 1.2 为        <a href="https://www.cnblogs.com/swordfall/p/9006088.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2018-05-12 03:04
牧梦者
<span data-post-id="9006088" class="post-view-count">阅读(19554)</span> 
<span data-post-id="9006088" class="post-comment-count">评论(0)</span> 
<span data-post-id="9006088" class="post-digg-count">推荐(1)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=9006088" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/swordfall/archive/2018/04/13.html">2018年4月13日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/swordfall/p/8737328.html">
    <span>
            <span>[置顶]</span>
        HBase基本概念与基本使用
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：1. HBase简介 1.1 什么是HBase HBASE是一个高可靠性、高性能、面向列、可伸缩的分布式存储系统，利用HBASE技术可在廉价PC Server上搭建起大规模结构化存储集群。 HBASE的目标是存储并处理大型的数据，更具体来说是仅需使用普通的硬件配置，就能够处理由成千上万的行和列所组成        <a href="https://www.cnblogs.com/swordfall/p/8737328.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2018-04-13 12:57
牧梦者
<span data-post-id="8737328" class="post-view-count">阅读(66642)</span> 
<span data-post-id="8737328" class="post-comment-count">评论(11)</span> 
<span data-post-id="8737328" class="post-digg-count">推荐(17)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=8737328" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/swordfall/archive/2018/04/01.html">2018年4月1日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/swordfall/p/8683905.html">
    <span>
            <span>[置顶]</span>
        RPC原理解析
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：1.RPC原理解析 1.1 什么是RPC RPC(Remote Procedure Call Protocol)——远程过程调用协议，它是一种通过网络从远程计算机程序上请求服务，而不需要了解底层网络技术的协议。RPC协议假定某些传输协议的存在，如TCP/IP或UDP，为通信程序之间携带信息数据。RP        <a href="https://www.cnblogs.com/swordfall/p/8683905.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2018-04-01 23:59
牧梦者
<span data-post-id="8683905" class="post-view-count">阅读(21344)</span> 
<span data-post-id="8683905" class="post-comment-count">评论(7)</span> 
<span data-post-id="8683905" class="post-digg-count">推荐(9)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=8683905" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/swordfall/archive/2018/01/20.html">2018年1月20日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/swordfall/p/8298386.html">
    <span>
            <span>[置顶]</span>
        POI读写大数据量excel，解决超过几万行而导致内存溢出的问题
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：1. Excel2003与Excel2007 两个版本的最大行数和列数不同，2003版最大行数是65536行，最大列数是256列，2007版及以后的版本最大行数是1048576行，最大列数是16384列。 excel2003是以二进制的方式存储，这种格式不易被其他软件读取使用；而excel2007采        <a href="https://www.cnblogs.com/swordfall/p/8298386.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2018-01-20 17:42
牧梦者
<span data-post-id="8298386" class="post-view-count">阅读(41409)</span> 
<span data-post-id="8298386" class="post-comment-count">评论(69)</span> 
<span data-post-id="8298386" class="post-digg-count">推荐(3)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=8298386" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/swordfall/archive/2021/04/25.html">2021年4月25日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/swordfall/p/14699660.html">
    <span>
        solr集成kerberos认证
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：1.&#160;概述 solr使用kerberos principal和keytab文件来认证zookeeper和solr集群。kerberos认证插件仅仅在solrcloud模式下有用。 当设置solr使用kerberos的时候，一个在KDC中注册认证的服务principal或者kerberos用户名的配置        <a href="https://www.cnblogs.com/swordfall/p/14699660.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2021-04-25 16:55
牧梦者
<span data-post-id="14699660" class="post-view-count">阅读(17)</span> 
<span data-post-id="14699660" class="post-comment-count">评论(0)</span> 
<span data-post-id="14699660" class="post-digg-count">推荐(0)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14699660" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/swordfall/archive/2021/04/22.html">2021年4月22日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/swordfall/p/14689983.html">
    <span>
        Ranger集成Kerberos
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：1.&#160;概述 当前ranger版本为ranger-1.2.0 2. 生成用户主体 在kerberos服务器生成用于ranger的用户主体： root@~:/# kadmin.local kadmin.local: addprinc -randkey http/node3@EXAMPLE.COM kad        <a href="https://www.cnblogs.com/swordfall/p/14689983.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2021-04-22 15:46
牧梦者
<span data-post-id="14689983" class="post-view-count">阅读(8)</span> 
<span data-post-id="14689983" class="post-comment-count">评论(0)</span> 
<span data-post-id="14689983" class="post-digg-count">推荐(0)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14689983" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
            <div class="postSeparator"></div>
        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/swordfall/p/14682565.html">
    <span>
        Openldap集成Kerberos
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：1.&#160;概述 openldap集成kerberos，有两种，一是openldap和kerberos各自拥有个人的数据库，一是openldap和kerberos共用一个数据库。 以下操作是在https://www.cnblogs.com/swordfall/p/12009716.html&#160;Kerbero        <a href="https://www.cnblogs.com/swordfall/p/14682565.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2021-04-22 15:20
牧梦者
<span data-post-id="14682565" class="post-view-count">阅读(7)</span> 
<span data-post-id="14682565" class="post-comment-count">评论(0)</span> 
<span data-post-id="14682565" class="post-digg-count">推荐(0)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14682565" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/swordfall/archive/2021/04/20.html">2021年4月20日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/swordfall/p/14677980.html">
    <span>
        Openldap只开启TLS1.2，禁用SSL/V2、SSL/V3
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：1. 概述 为啥要用TLS? Openldap默认使用简单验证，对slapd的所有访问都使用明文密码通过未加密通道进行。为了确保信息安全，需要对信息进行加密传输，SSL(Secure Sockets Layer)是一个可靠的解决方案。 它使用X.509证书，由可信任第三方（Certificate A        <a href="https://www.cnblogs.com/swordfall/p/14677980.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2021-04-20 11:07
牧梦者
<span data-post-id="14677980" class="post-view-count">阅读(43)</span> 
<span data-post-id="14677980" class="post-comment-count">评论(0)</span> 
<span data-post-id="14677980" class="post-digg-count">推荐(0)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14677980" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/swordfall/archive/2021/03/17.html">2021年3月17日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/swordfall/p/14548574.html">
    <span>
        Flink集成Iceberg简介
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：1. 概述 Apache Iceberg is an open table format for huge analytic datasets. Iceberg adds tables to Presto and Spark that use a high-performance format th        <a href="https://www.cnblogs.com/swordfall/p/14548574.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2021-03-17 14:48
牧梦者
<span data-post-id="14548574" class="post-view-count">阅读(439)</span> 
<span data-post-id="14548574" class="post-comment-count">评论(0)</span> 
<span data-post-id="14548574" class="post-digg-count">推荐(0)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14548574" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/swordfall/archive/2021/02/01.html">2021年2月1日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/swordfall/p/13426569.html">
    <span>
        Hive架构与源码分析（整理版）
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：1.&#160;Hive的架构 Hive的体系结构可以分为以下几部分： 用户接口主要有三个：CLI，JDBC/ODBC和&#160;Web&#160;UI。 ①其中，最常用的是CLI，即Shell命令行； ②JDBC/ODBC&#160;Client是Hive的Java客户端，与使用传统数据库JDBC的方式类似，用户需要连接至Hive S        <a href="https://www.cnblogs.com/swordfall/p/13426569.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2021-02-01 17:50
牧梦者
<span data-post-id="13426569" class="post-view-count">阅读(216)</span> 
<span data-post-id="13426569" class="post-comment-count">评论(0)</span> 
<span data-post-id="13426569" class="post-digg-count">推荐(0)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=13426569" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/swordfall/archive/2020/11/19.html">2020年11月19日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/swordfall/p/13938122.html">
    <span>
        Javaweb中PO BO VO DTO POJO DAO DO概念理解
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：1.&#160;概念及理解 PO、DTO、VO、BO都叫POJO，就是个简单的java对象。这些概念用于描述对象的类型；由于java是面向对象的语言；程序的世界就是各个对象之间的“交互”；在交互的过程中会存在多个层次，每个层次中所拥有的内容都是不一样的； PO（Persistant Object）持久化对象。        <a href="https://www.cnblogs.com/swordfall/p/13938122.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-11-19 19:47
牧梦者
<span data-post-id="13938122" class="post-view-count">阅读(246)</span> 
<span data-post-id="13938122" class="post-comment-count">评论(1)</span> 
<span data-post-id="13938122" class="post-digg-count">推荐(0)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=13938122" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/swordfall/archive/2020/09/30.html">2020年9月30日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/swordfall/p/13755232.html">
    <span>
        JVM分析工具与查看命令
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：1.概述 无可避免地，我们都需要用到多线程的一天。单纯地使用多线程的参数设置，比如-Xms、-Xmx、-Xss等，还不足够，我们还要学会如何分析JVM里面的线程状况。 在进行java程序问题定位时，内存问题定位是很关键的，jvm自带的命令可以方便的在生产监控和打印堆栈的日志信息帮忙我们来定位问题！虽        <a href="https://www.cnblogs.com/swordfall/p/13755232.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-09-30 16:32
牧梦者
<span data-post-id="13755232" class="post-view-count">阅读(781)</span> 
<span data-post-id="13755232" class="post-comment-count">评论(0)</span> 
<span data-post-id="13755232" class="post-digg-count">推荐(0)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=13755232" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/swordfall/archive/2020/07/29.html">2020年7月29日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/swordfall/p/13083714.html">
    <span>
        PostgreSQL数据库的sql语法（整理版）
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：1.&#160;概述 PostgreSQL是一个免费的关系型数据库服务器（ORDBMS） 2.&#160;登录数据库 以用户的名义登录数据库，这时使用的是psql命令 psql -h 127.0.0.1 -U dbuser -p 5832 -d database 上面的命令的参数含义如下： -h&#160;指定服务器 -p&#160;指定        <a href="https://www.cnblogs.com/swordfall/p/13083714.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-07-29 16:56
牧梦者
<span data-post-id="13083714" class="post-view-count">阅读(1631)</span> 
<span data-post-id="13083714" class="post-comment-count">评论(0)</span> 
<span data-post-id="13083714" class="post-digg-count">推荐(0)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=13083714" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/swordfall/archive/2020/07/23.html">2020年7月23日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/swordfall/p/13301097.html">
    <span>
        Kerberos与各大组件的集成
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：1. 概述 Kerberos可以与CDH集成，CDH里面可以管理与hdfs、yarn、hbase、yarn、kafka等相关组件的kerberos凭证。但当我们不使用CDH的时候，也需要了解hdfs、yarn、hbase和kafka是如何配置关联kerberos的。 该文是建立在Kerberos基本        <a href="https://www.cnblogs.com/swordfall/p/13301097.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-07-23 11:25
牧梦者
<span data-post-id="13301097" class="post-view-count">阅读(885)</span> 
<span data-post-id="13301097" class="post-comment-count">评论(0)</span> 
<span data-post-id="13301097" class="post-digg-count">推荐(0)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=13301097" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>



<div class="topicListFooter">
    <div id="nav_next_page">
        
    <a href="https://www.cnblogs.com/swordfall/default.html?page=2">
        下一页
    </a>

    </div>    
</div>






<script>
    updatePostStats(
        $(".post-view-count").map(function () { return this.dataset.postId }).get(),
        function(id, count) { $(".post-view-count[data-post-id=" + id + "]").text("阅读(" + count + ")") },
        function(id, count) { $(".post-comment-count[data-post-id=" + id + "]").text("评论(" + count + ")") },
        function(id, count) { $(".post-digg-count[data-post-id=" + id + "]").text("推荐(" + count + ")") });
</script>
	</div><!--end: forFlow -->
	</div><!--end: mainContent 主体内容容器-->
	<div id="sideBar">
		<div id="sideBarMain">
			<div id="sidebar_news" class="newsItem">
            <script>loadBlogNews();</script>
</div>
<div id="sidebar_c3"></div>
			<div id="blog-calendar" style="display:none"></div><script>loadBlogDefaultCalendar();</script>			
			<div id="leftcontentcontainer">
				<div id="blog-sidecolumn"></div>
                    <script>loadBlogSideColumn();</script>
			</div>			
		</div><!--end: sideBarMain -->
	</div><!--end: sideBar 侧边栏容器 -->
	<div class="clear"></div>
	</div><!--end: main -->
	<div class="clear"></div>
	<div id="footer">
		<!--done-->
Copyright &copy; 2021 牧梦者
<br /><span id="poweredby">Powered by .NET 5.0 on Kubernetes</span>



	</div><!--end: footer -->
</div><!--end: home 自定义的最大容器 -->


    <div id="page_end_html">
        <script type="text/javascript">
"use strict";

(function (window, document, navigator) {

    var element = {
        body: document.body,
	main: "main",
        forFlow: "forFlow",
        postTitle: "cb_post_title_url",
        postBody: "cnblogs_post_body",
        postCategory: "BlogPostCategory",
        postTagList: "EntryTag",
        toc: "table_of_content_warp",
        digg: "div_digg",
        sideBar: "sideBar",
    };

    function $id(id) {
        return $("#" + id);
    }

   function $class(id) {
        return $("." + id);
    }

   function showTurtle(){
     var turtleBar = [];
      turtleBar.push('<div id="gadgetSWF">');
      turtleBar.push('<embed type="application/x-shockwave-flash" src="https://files-cdn.cnblogs.com/files/swordfall/turtle.swf" width="140" height="140" id="flashID" name="flashID" bgcolor="#FFFFFF" quality="high" scale="noscale" salign="tl" flashvars="up_backgroundColor=FFFFFF" wmode="opaque" allowscriptaccess="always">');
     turtleBar.push('</div>');
     var turtleBarHtml = turtleBar.join('');
     
     $(element.body).append(turtleBarHtml)
   }

    function showFixedBarCore() {
        var fixedBar = [];
        fixedBar.push('<div class="fixed-bar-warp">');
        fixedBar.push('<div class="fixed-bar">');

        if ($id(element.postBody).length) {
            fixedBar.push('<a class="item toc" href="javascript:sf.toc.toggle();" title="目录"><i class="fa fa-hashtag"></i></a>');
            fixedBar.push('<a class="item comments" href="#comment_form_container" title="评论列表"><i class="fa fa-comments"></i></a>');
            fixedBar.push('<a class="item comment" href="#comment_form" title="写评论"><i class="fa fa-pencil"></i></a>');
        }

        fixedBar.push('<a class="item top" href="javascript:scroll(0,0);" title="返回顶部"><i class="fa fa-arrow-circle-up"></i></a>');
        fixedBar.push('</div>');
        fixedBar.push('</div>');

        var fixedBarHtml = fixedBar.join('');

        $(element.body).append(fixedBarHtml)
    }

    function moveDiggCore() {
        var $sideBar = $id(element.sideBar);
        if ($sideBar.find(element.digg).length) {
            return true;
        }

        var $digg = $id(element.digg);
        if ($digg.length) {
            $sideBar.append($digg);
            return true;
        }
    }

    function copyCategoryAndTagCore() {
        var categotyHtml = $id(element.postCategory).html();
        var entryTagListHtml = $id(element.postTagList).html();

        if (categotyHtml) {
            var html = "<div class='post-categoty-tags'>";
            html += "<div class='post-categoty'>";
            html += categotyHtml;
            html += "</div>";
            html += "<div class='post-tags'>";
            html += entryTagListHtml;
            html += "</div>";
            html += "</div>";
            $(html).insertBefore("#topics .postBody");
            return true;
        }
    }

    function getPostTitleCore() {
        return $id(element.postTitle).text();
    }

    function getPostBodyHeaderListCore() {
        var headerList = [];

        $id(element.postBody).find(":header").each(function (index, header) {
            var $header = $(header);
            var tagName = header.tagName.toLowerCase();
            if (tagName === 'h1' ||
                tagName === 'h2' ||
                tagName === 'h3') {
                if (!header.id) {
                    header.id = "auto_id_" + index;
                }

                headerList.push({
                    id: header.id,
                    text: $header.text(),
                    tagName: tagName,
                    offsetTop: parseInt($header.offset().top, 10)
                });
            }
        });

        return headerList;
    }

    function buildTableOfContentsHtmlCore() {
        var headerList = getPostBodyHeaderListCore();
        var tableOfContentsHtml = [];

        if (headerList.length) {
            tableOfContentsHtml.push('<div id="' + element.toc + '" class="sf_toc_warp">');
            tableOfContentsHtml.push('<div class="title"># ' + getPostTitleCore() + '</div>');
            tableOfContentsHtml.push('<div class="toc">');
            for (var i = 0; i < headerList.length; i++) {
                var header = headerList[i];
                var tableOfContentsItemHtml = "<a" +
                    " href='#" + header.id + "'" +
                    " id='toc_" + header.id + "'" +
                    " class='item item-" + header.tagName + "'" +
                    " title='" + header.text + "'" +
                    ">" +
                    header.text +
                    "</a>";

                tableOfContentsHtml.push(tableOfContentsItemHtml);
            }
            tableOfContentsHtml.push('</div>');
            tableOfContentsHtml.push('</div>');
        }

        return tableOfContentsHtml.join('');
    }

    var count = 0;

    function toggleTableOfContentsCore() {
        var $main= $id(element.main);
        var $forFlow= $class(element.forFlow);
        var $toc = $id(element.toc);

        if ($toc.length === 0) {
            var tocHtml = buildTableOfContentsHtmlCore();
            if (tocHtml) {
                $main.append(tocHtml);
                $toc = $id(element.toc);
            }
            if ($toc) {
                show($toc, $forFlow);
            }
            return;
        }

        if ($toc.css("display") === "none") {
            show($toc, $forFlow);
        } else {
            hide($toc, $forFlow);
        }

        function show($toc, $forFlow) {
            var width = $toc.width();
            if(count == 0){
              var parHeight = $class("sf_toc_warp").height();
              var tocHeight = parHeight - 250;
              $toc.css("height", tocHeight + "px");
              count +=1;
            }
            
            $toc.css("display", "inline-block");
            if (width != null){ 
             
                  $forFlow.css("margin-right", "13%");
                       
            }
        }

        function hide($toc, $forFlow) {
            $toc.css("display", "none");
            $forFlow.css("margin-right", "36px");
        }
    }

    function selectedTableOfContentsItemCore(headerId) {
        var $items = $id(element.toc).find(".item");
        var $current = $("#toc_" + headerId);
        if (!$current.hasClass("current")) {
            $items.removeClass("current");
            $current.addClass("current");
        }
    }

    function watchWindowScrollCore() {
        var headerList = getPostBodyHeaderListCore();
        var scrollTop = $(window).scrollTop() + 80;
        for (var i = 0; i < headerList.length; i++) {
            var current = headerList[i];
            var next = headerList[i + 1];
            if (scrollTop > current.offsetTop) {
                if (next && (scrollTop >= next.offsetTop)) {
                    continue;
                }
                selectedTableOfContentsItemCore(current.id);
                break;
            }
        }
    }

    window.sf = {
       turtleBar: {
            show: showTurtle
        },
        fixedBar: {
            show: showFixedBarCore
        },
        digg: {
            move: moveDiggCore
        },
        post: {
            copyCategoryAndTag: copyCategoryAndTagCore,
        },
        toc: {
            buildId: getPostBodyHeaderListCore,
            toggle: toggleTableOfContentsCore,
            watchWindowScroll: function () {
                $(window).scroll(watchWindowScrollCore);
            }
        },
        run: function () {
            var functionList = Array.prototype.slice.apply(arguments);

            var intervalCoreHandler = setInterval(intervalCore, 500);

            function intervalCore() {
                var length = functionList.length;
                for (var i = 0; i < length; i++) {
                    var functionHandler = functionList[i];
                    if (functionHandler) {
                        var result = functionHandler();
                        if (result) {
                            functionList.splice(i, 1);
                            i--;
                            length--;
                        }
                    }
                }
                if (functionList.length === 0) {
                    clearInterval(intervalCoreHandler);
                }
            };
        }
    };

    window.sf.isMobile = function () {
        return navigator.userAgent.match(/.*Mobile.*/);
    };

    window.sf.addMobileCss = function () {
        $id("home").before('<link href="//files.cnblogs.com/files/linianhui/sf.cnblogs.mobile.css" rel="stylesheet">');
    };

})(window, document, navigator);

if (sf.isMobile()) {
    sf.addMobileCss();
    sf.toc.buildId();
    sf.run(sf.post.copyCategoryAndTag);
} else {
    sf.fixedBar.show();
    sf.toc.toggle();
    sf.toc.watchWindowScroll();
    sf.run(sf.post.copyCategoryAndTag);
}


//Setting ico for cnblogs
var linkObject = document.createElement('link');
linkObject.rel = "shortcut icon";
linkObject.href = "https://blog-static.cnblogs.com/files/swordfall/favicon.ico";
document.getElementsByTagName("head")[0].appendChild(linkObject);

var top_nav = document.getElementById("top_nav");
top_nav.parentNode.removeChild(top_nav);
</script>
    </div>

    <input type="hidden" id="antiforgery_token" value="CfDJ8L-rpLgFVEJMgssCVvNUAjsCV-gSi_2lvZFHFqe0_tUw51bHHnWLzjL3lOj9eQdpcmaUw-hzJEnaZLxoJuhGYLdGU26goTrjij0ZyTSar_u1ORUXrfh2vAWbOL0ljQXQVssRzEVXn1sHzFk_Q28-2bE" />
</body>
</html>
